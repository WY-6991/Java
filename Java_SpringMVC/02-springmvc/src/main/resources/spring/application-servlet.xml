<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/mvc/spring-aop.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">


    <context:component-scan base-package="com.wuxin"/>


    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven/>

    <!-- 1.配置数据库相关参数properties的属性 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 2.使用c3po作为数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 导入mybatis-config.xml配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.wuxin.pojo"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath*:com/wuxin/mapper/*.xml"/>
    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.wuxin.mapper"/>
    </bean>




<!--    springmvc-->
    <!-- 5、配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务传播方式，以及异常回滚-->
<!--    <tx:advice id="txadvice" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>-->
<!--            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>-->
<!--            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>-->
<!--            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>-->
<!--            <tx:method name="list*" propagation="REQUIRED" rollback-for="Exception"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

    <!--配置切面-->

<!--    <aop:config>-->
<!--        <aop:pointcut id="serviceMethod" expression="execution(* com.wuxin.service.*.*(..))"/>-->
<!--        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txadvice"/>-->
<!--    </aop:config>-->


    <!-- 配置基于注解的声明式事务 -->
<!--    <tx:annotation-driven transaction-manager="transactionManager" order="1"/>-->

    <!--静态资源-->
    <mvc:resources mapping="/css/**" location="/static/css/"/>
    <mvc:resources mapping="/js/**" location="/static/js/"/>
    <mvc:resources mapping="/image/**" location="/static/image/"/>
    <!--指定文件映射路径-->
    <!--windows-->
    <mvc:resources mapping="/resource/**" location="file:///d://desktop//resource//"/>
    <!--linux-->
    <!--    <mvc:resources mapping="/resource/**" location="/usr/local/upload/resource/"/>-->

    <!--设置servlet处理器handler-->
    <mvc:default-servlet-handler/>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html) ,也可以自定义解析器 实现ViewResolver接口 注意自定义解析器需要实现Order- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>

    <!--配置文件上传解析器-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置文件编码格式-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--设置最大上传大小-->
        <property name="maxUploadSize" value="10240000"/>
    </bean>


    <!--拦截器配置-->
<!--    <mvc:interceptors>-->
<!--        &lt;!&ndash; 配置登录拦截器&ndash;&gt;-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/admin/**"/>-->
<!--            <bean id="loginInterceptor" class="com.wuxin.interceptor.LoginInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--        &lt;!&ndash; 配置权限拦截器&ndash;&gt;-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/admin/*/update/**"/>-->
<!--            <mvc:mapping path="/admin/*/add/**"/>-->
<!--            <mvc:mapping path="/admin/*/delete/**"/>-->
<!--            <bean id="permissionInterceptor" class="com.wuxin.interceptor.PermissionInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->

    <!-- 注解方式实现AOP -->

    <!-- 激活自动代理功能   -->
    <!-- 代理方式1：采用JDK代理 -->
    <!--    <aop:aspectj-autoproxy/>-->
    <!--     代理方式2：cglib代理 -->
    <!--     <aop:aspectj-autoproxy proxy-target-class="true"/>   -->
    <!-- 找到被注解了的切面类，进行切面配置 -->
    <!--    <context:component-scan base-package="com.wuxin.aspect"/>-->
    <!--    <context:component-scan base-package="com.wuxin.controller"/>-->


</beans>
